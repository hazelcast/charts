#!/bin/bash

set -e
set -o pipefail

kubectl version
helm version --client

function cleanup() {
    echo "Deleting existing Helm releases..."
    helm ls --all --short | xargs -L1 helm delete --purge || true
    echo "Uninstalling tiller form k8s cluster..."
    helm reset || true
    echo "Removing Helm test pods..."
    kubectl get pods | grep Completed | awk '{print $1}' | xargs kubectl delete pod || true
}

trap cleanup EXIT ERR INT TERM
cleanup

TILLER_SA="tiller"
if kubectl get serviceaccounts -n kube-system | grep "${TILLER_SA}" | tail -n 1; then
    echo "tiller serviceaccount is already created."
    TILLER_BOUND_ROLE=$(kubectl get -n kube-system clusterrolebinding tiller-cluster-rule -o jsonpath='{.roleRef.name}')
    if [ "$TILLER_BOUND_ROLE" != "cluster-admin" ]; then
        kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:${TILLER_SA}
        echo "cluster-admin role is bound to existing tiller serviceaccount."
    fi
else
    echo "tiller serviceaccount is not found. Creating..."
    kubectl create serviceaccount -n kube-system ${TILLER_SA}
    kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:${TILLER_SA}
    echo "tiller serviceaccount created and cluster-admin role is bound to it."
fi

echo "Initializing the Helm/Tiller..."
helm init --service-account tiller --wait --node-selectors pool=standard

echo "Packaging local Helm charts..."
for chart in ${WORKSPACE}/stable/*; do
    helm package --save=false ${chart};
done

HAZELCAST_HELM_PATH=$(find ${WORKSPACE} -regex '.*hazelcast-[0-9]+.[0-9]+.[0-9]+.tgz?')
JET_HELM_PATH=$(find ${WORKSPACE} -regex '.*hazelcast-jet-[0-9]+.[0-9]+.[0-9]+.tgz?')

echo "Testing Hazelcast IMDG Chart..."
helm install --debug --name hz-release --set nodeSelector.pool=standard,hazelcast.yaml.hazelcast.network.kubernetes.service-name=hz-helm-service,mancenter.nodeSelector.pool=standard --wait --timeout=360 ${HAZELCAST_HELM_PATH}
helm lint ${HAZELCAST_HELM_PATH}
helm test hz-release --debug --cleanup

echo "Testing JET Chart..."
helm install --debug --name jet-release --set nodeSelector.pool=standard,jet.yaml.hazelcast.network.kubernetes.service-name=jet-helm-service,managementcenter.nodeSelector.pool=standard --wait --timeout=360 ${JET_HELM_PATH}
helm lint ${JET_HELM_PATH}
helm test jet-release --debug --cleanup


