#!/bin/bash

set -e
set -o pipefail

git --version 2>&1 >/dev/null
GIT_IS_AVAILABLE=$?

hub --version 2>&1 >/dev/null
HUB_IS_AVAILABLE=$?

wget --version 2>&1 >/dev/null
WGET_IS_AVAILABLE=$?

which ssh 2>&1 >/dev/null
SSH_IS_AVAILABLE=$?

if [ $GIT_IS_AVAILABLE -eq 0 ] && [ $HUB_IS_AVAILABLE -eq 0 ] && [ $WGET_IS_AVAILABLE -eq 0 ] && [ $SSH_IS_AVAILABLE -eq 0 ]; then
    echo "All necessary tools are avaliable at current environment."
else
    echo "Tool(s) are missing. Check git, hub, wget and ssh installed at the environment!!"
    exit 1
fi

#hazelcast or hazelcast-jet
CHARTS=(hazelcast hazelcast-jet);
if [[ " "${CHARTS[@]}" " == *" "$1" "* ]] ;then
    echo "$1: chart is valid"
else
    echo "$1: not recognized. Valid charts are:"
    echo "${CHARTS[@]/%/,}"
    exit 1
fi
CHART_NAME=$1

cp -TRv ${WORKSPACE}/hz-charts/stable/${CHART_NAME}/ ${WORKSPACE}/helm-charts/stable/${CHART_NAME}/

echo "Configuring ssh-key and e-mail for git commands..."
git config --global user.email "${GITHUB_EMAIL}"
git config --global user.name "${GITHUB_USERNAME}"
ssh -o StrictHostKeyChecking=no git@github.com || true

pushd ${WORKSPACE}/hz-charts
    LATEST_COMMIT_MESSAGE=$(git log --oneline --format=%B -n 1 HEAD | head -n 1)
popd

pushd ${WORKSPACE}/helm-charts
    sed -i 's#:repo:.*#:repo: helm/charts#g' ./stable/${CHART_NAME}/README.adoc
    git checkout -b ${BRANCH_NAME}
    git remote add devops-helm git@github.com:devOpsHelm/charts.git
    git remote -v
    git add ./stable/${CHART_NAME} && git commit -s -m "${LATEST_COMMIT_MESSAGE}"
    git push -u devops-helm ${BRANCH_NAME}

    OFFICIAL_HELM_PR_ISSUE_NUMBER=$(hub pull-request -m "[stable/${CHART_NAME}] ${LATEST_COMMIT_MESSAGE}" -b ${HELM_REPOSITORY}:master -h devOpsHelm/charts:${BRANCH_NAME} | awk -F/ '{print $7}')
    hub api repos/${HELM_REPOSITORY}/issues/${OFFICIAL_HELM_PR_ISSUE_NUMBER}/comments -f body='Please approve @hasancelik @leszko @mesutcelik @googlielmo @eminn'
popd