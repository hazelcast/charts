{{- if .Values.hazelcast.enabled }}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ template "hazelcast.fullname" . }}-test-{{ randAlphaNum 5 | lower }}"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded, hook-failed
  labels:
    app.kubernetes.io/name: {{ template "hazelcast.name" . }}
    helm.sh/chart: {{ template "hazelcast.chart" . }}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    app.kubernetes.io/component: "test"
    role: test
spec:
  {{- if .Values.image.pullSecrets }}
  imagePullSecrets:
    {{- range .Values.image.pullSecrets }}
    - name: {{ . }}
    {{- end}}
  {{- end}}
  {{- if .Values.nodeSelector }}
  nodeSelector:
{{ toYaml .Values.nodeSelector | indent 4 }}
  {{- end }}
  containers:
  - name: "{{ template "hazelcast.fullname" . }}-test"
    image: "{{ .Values.test.image.repository }}:{{ .Values.test.image.tag }}"
    command:
    - "sh"
    - "-c"
    - |
      set -ex
      {{- if not .Values.test.securityContext.enabled }}
      # Install required test tools
      apk add -q curl
      {{- end }}
      # Get the number of Hazelcast members in the cluster
      CLUSTER_SIZE=$(curl {{ template "hazelcast.fullname" . }}:{{ .Values.service.port }}/hazelcast/health/cluster-size)
      # Test the correct number of Hazelcast members
      test ${CLUSTER_SIZE} -eq {{ .Values.cluster.memberCount }}
    resources:
{{ toYaml .Values.test.resources | indent 6 }}
    {{- if .Values.test.securityContext.enabled }}
    securityContext:
      runAsNonRoot: {{ if eq (int .Values.test.securityContext.runAsUser) 0 }}false{{ else }}true{{ end }}
      runAsUser: {{ .Values.test.securityContext.runAsUser }}
      runAsGroup: {{ .Values.test.securityContext.runAsGroup }}
      privileged: false
    {{- end }}
  restartPolicy: Never
{{- end }}
