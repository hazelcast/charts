apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "hazelcast.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "hazelcast.name" . }}
    helm.sh/chart: {{ template "hazelcast.chart" . }}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
spec:
  serviceName: {{ template "hazelcast.fullname" . }}
  replicas: {{ .Values.cluster.memberCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "hazelcast.name" . }}
      app.kubernetes.io/instance: "{{ .Release.Name }}"
      role: hazelcast
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "hazelcast.name" . }}
        helm.sh/chart: {{ template "hazelcast.chart" . }}
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/managed-by: "{{ .Release.Service }}"
        role: hazelcast
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
        {{- end}}
      {{- end}}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.gracefulShutdown.enabled }}
      terminationGracePeriodSeconds: {{ .Values.gracefulShutdown.maxWaitSeconds }}
      {{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      containers:
      - name: {{ template "hazelcast.fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - name: hazelcast
          containerPort: 5701
          hostPort: {{ .Values.hostPort }}
        {{- if .Values.metrics.enabled }}
        - name: metrics
          containerPort: {{ .Values.metrics.service.port }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /hazelcast/health/node-state
            port: 5701
            scheme: {{ if .Values.hazelcast.ssl }}HTTPS{{ else }}HTTP{{ end }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /hazelcast/health/node-state
            port: 5701
            scheme: {{ if .Values.hazelcast.ssl }}HTTPS{{ else }}HTTP{{ end }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
        volumeMounts:
        - name: hazelcast-storage
          mountPath: /data/hazelcast
        {{- if .Values.hotRestart.enabled }}
        - name: hot-restart-persistence
          mountPath: /data/hot-restart
        {{- end }}
        {{- if .Values.secretsMountName }}
        - name: hazelcast-secrets
          mountPath: /data/secrets
        {{- end }}
        {{- if .Values.customVolume }}
        - name: hazelcast-custom
          mountPath: /data/custom
        {{- end }}
        env:
        - name: HZ_LICENSE_KEY
        {{- if .Values.hazelcast.licenseKeySecretName }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.hazelcast.licenseKeySecretName }}
              key: key
        {{- else }}
          value: {{ .Values.hazelcast.licenseKey }}
        {{- end }}
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        {{- if .Values.metrics.enabled }}
        - name: PROMETHEUS_PORT
          value: "{{ .Values.metrics.service.port }}"
        {{- end }}
        - name: JAVA_OPTS
          value: "-Dhazelcast.rest.enabled={{ .Values.hazelcast.rest }} -Dhazelcast.config=/data/hazelcast/hazelcast.yaml -DserviceName={{ template "hazelcast.serviceName" . }} -Dnamespace={{ .Release.Namespace }} -Dhazelcast.mancenter.enabled={{ .Values.mancenter.enabled }} -Dhazelcast.ssl={{ .Values.hazelcast.ssl }} -Dhazelcast.hotRestart={{ .Values.hotRestart.enabled }} -Dhazelcast.mancenter.url={{ if .Values.mancenter.ssl }}https{{ else }}http{{ end }}://{{ template "mancenter.fullname" . }}:{{ .Values.mancenter.service.port }}/hazelcast-mancenter {{ if .Values.gracefulShutdown.enabled }}-Dhazelcast.shutdownhook.policy=GRACEFUL -Dhazelcast.shutdownhook.enabled=true -Dhazelcast.graceful.shutdown.max.wait={{ .Values.gracefulShutdown.maxWaitSeconds }} {{ end }} -Dhazelcast.cluster.version.auto.upgrade.enabled={{ .Values.hazelcast.updateClusterVersionAfterRollingUpgrade }} {{ if .Values.metrics.enabled }}-Dhazelcast.jmx=true{{ end }} {{ .Values.hazelcast.javaOpts }}"
        {{- if .Values.securityContext.enabled }}
        securityContext:
          runAsNonRoot: true
          runAsUser: {{ .Values.securityContext.runAsUser }}
          privileged: false
          readOnlyRootFilesystem: {{ not .Values.hotRestart.enabled }}
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        {{- end }}
      serviceAccountName: {{ template "hazelcast.serviceAccountName" . }}
      volumes:
      - name: hazelcast-storage
        configMap:
          {{- if .Values.hazelcast.existingConfigMap }}
          name: {{ .Values.hazelcast.existingConfigMap }}
          {{- else }}
          name: {{ template "hazelcast.fullname" . }}-configuration
          {{- end }}
      {{- if .Values.hotRestart.enabled }}
      - name: hot-restart-persistence
        persistentVolumeClaim:
          claimName: {{ .Values.hotRestart.existingClaim | default (include "hazelcast.fullname" .) }}
      {{- end }}
      {{- if .Values.secretsMountName }}
      - name: hazelcast-secrets
        secret:
          secretName: {{ .Values.secretsMountName }}
      {{- end }}
      {{- if .Values.customVolume }}
      - name: hazelcast-custom
{{ toYaml .Values.customVolume | indent 8 }}
      {{- end }}
